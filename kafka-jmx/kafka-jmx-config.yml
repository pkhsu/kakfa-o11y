hostPort: kafka:9997
username: ""
password: ""
ssl: false
lowercaseOutputName: true
lowercaseOutputLabelNames: true

# Kafka broker metrics rules
rules:
  # Broker metrics
  - pattern: "kafka.server<type=(.+), name=(.+)><>Value"
    name: kafka_server_$1_$2
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "broker"

  # Controller metrics  
  - pattern: "kafka.controller<type=(.+), name=(.+)><>Value"
    name: kafka_controller_$1_$2
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "controller"

  # Network request metrics
  - pattern: "kafka.network<type=(.+), name=(.+), request=(.+)><>Count"
    name: kafka_network_$1_$2_total
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "network"
      request: $3

  # Network request time metrics
  - pattern: "kafka.network<type=(.+), name=(.+), request=(.+)><>Mean"
    name: kafka_network_$1_$2_mean
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "network"
      request: $3

  # Topic partition metrics
  - pattern: "kafka.log<type=(.+), name=(.+), topic=(.+), partition=(.+)><>Value"
    name: kafka_log_$1_$2
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "log"
      topic: $3
      partition: $4

  # Topic level metrics (no partition)
  - pattern: "kafka.log<type=(.+), name=(.+), topic=(.+)><>Value"
    name: kafka_log_$1_$2
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "log"
      topic: $3

  # Producer request metrics per topic
  - pattern: "kafka.server<type=(.+), name=(.+), topic=(.+)><>Count"
    name: kafka_server_$1_$2_total
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "broker"
      topic: $3

  # Consumer lag monitoring
  - pattern: "kafka.consumer<type=(.+), name=(.+), client-id=(.+)><>Value"
    name: kafka_consumer_$1_$2
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "consumer"
      client_id: $3

  # JVM metrics
  - pattern: "java.lang<type=(.+), name=(.+)><>(.+)"
    name: kafka_jvm_$1_$2_$3
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "jvm"
      
  # Garbage collection metrics
  - pattern: "java.lang<type=GarbageCollector, name=(.+)><>CollectionCount"
    name: kafka_jvm_gc_collection_count_total
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "jvm"
      gc_name: $1

  - pattern: "java.lang<type=GarbageCollector, name=(.+)><>CollectionTime"
    name: kafka_jvm_gc_collection_time_total
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "jvm"
      gc_name: $1

  # Memory pool metrics
  - pattern: "java.lang<type=MemoryPool, name=(.+)><>Usage"
    name: kafka_jvm_memory_pool_usage_bytes
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "jvm"
      pool: $1

  # Kafka Connect metrics (if using Connect)
  - pattern: "kafka.connect<type=(.+), name=(.+)><>Value"
    name: kafka_connect_$1_$2
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "connect"

  # Kafka Streams metrics (if using Streams)
  - pattern: "kafka.streams<type=(.+), name=(.+)><>Value"
    name: kafka_streams_$1_$2
    labels:
      cluster: "tutorial"
      instance: "kafka"
      component: "streams" 